// <auto-generated />
using System;
using AquaMind.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AquaMind.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("AquaMind.API.Models.AlertaUmidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAlerta")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataLeitura")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Lido")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mensagem")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prioridade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.Property<int>("ZonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AlertaUmidades");
                });

            modelBuilder.Entity("AquaMind.API.Models.Bomba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInstalacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataUltimaManutencao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ligada")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Localizacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Potencia")
                        .HasColumnType("TEXT");

                    b.Property<int>("ZonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Bombas");
                });

            modelBuilder.Entity("AquaMind.API.Models.ConfiguracaoZona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataUltimaAlteracao")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan?>("IntervaloIrrigacao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IrrigacaoAutomatica")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NotificacaoEmail")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NotificacaoSMS")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("TempoIrrigacao")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UmidadeMaxima")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UmidadeMinima")
                        .HasColumnType("TEXT");

                    b.Property<int>("ZonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConfiguracaoZonas");
                });

            modelBuilder.Entity("AquaMind.API.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("AquaMind.API.Models.HistoricoAcaoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAcao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnderecoIP")
                        .HasColumnType("TEXT");

                    b.Property<string>("Entidade")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EntidadeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserAgent")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("HistoricoAcaoUsuarios");
                });

            modelBuilder.Entity("AquaMind.API.Models.LogAcaoBomba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Automatica")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BombaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAcao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioAcao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LogAcaoBombas");
                });

            modelBuilder.Entity("AquaMind.API.Models.Propriedade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("AreaTotal")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CEP")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<int>("EstadoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Propriedades");
                });

            modelBuilder.Entity("AquaMind.API.Models.RegistroSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasColumnType("TEXT");

                    b.Property<int>("SensorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RegistroSensors");
                });

            modelBuilder.Entity("AquaMind.API.Models.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInstalacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataUltimaLeitura")
                        .HasColumnType("TEXT");

                    b.Property<string>("Localizacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ZonaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Sensores");
                });

            modelBuilder.Entity("AquaMind.API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ativo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("AquaMind.API.Models.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("Area")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Ativa")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PropriedadeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TipoCultura")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Zonas");
                });
#pragma warning restore 612, 618
        }
    }
}
